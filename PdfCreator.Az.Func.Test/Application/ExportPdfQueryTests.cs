using Application.Common.Interfaces;
using Application.Files.Queries.ExportPdf;
using Domain.Dto.Response;
using FakeItEasy;
using FluentAssertions;
using Xunit;

namespace PdfCreator.Az.Func.Test.Application
{
    public class ExportPdfQueryTests
    {
        private readonly IPdfFileBuilder _pdfFileBuilder;
        private readonly IFileShareService _fileShareService;

        public ExportPdfQueryTests()
        {
            _pdfFileBuilder = A.Fake<IPdfFileBuilder>();
            _fileShareService = A.Fake<IFileShareService>();
        }

        [Theory]
        [MemberData(nameof(InitializeValues))]
        public async Task Handle_Should_ReturnFileResponseSuccess(ExportPdfModel exportPdfModel)
        {
            //Arrange
            ExportPdfQuery exportPdfQuery = new(_pdfFileBuilder, _fileShareService);
            A.CallTo(() => _pdfFileBuilder.Build(exportPdfModel.Template)).Returns(new FileResponseDto
            {
                Success = true,
                FileName = "name",
                Errors = new List<string>(),
                FileBase64 = ""
            });

            //Act
            FileResponseDto result = await exportPdfQuery.Handle(exportPdfModel, CancellationToken.None);

            //Assert
            result.Should().BeOfType<FileResponseDto>();
            result.Should().NotBeNull();
            result.FileBase64.Should().NotBeNull();
            result.Success.Should().BeTrue();
            result.Errors.Should().BeEmpty();
        }

        public static IEnumerable<object[]> InitializeValues()
        {
            ExportPdfModel exportPdfModel = new()
            {
                Template = "<html lang=\"en\"><head><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>Document</title></head><body><h1>Esto es una prueba</h1></body></html>"
            };
            yield return new object[] { exportPdfModel };
        }
    }
}
